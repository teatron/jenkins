Для успешного выполнения данного Pipeline нам понадобится учетка в DockerHub (https://hub.docker.com/) куда по итогу будет отправлен наш собраный контейнер.

Что было выполено.

1. Установлен сам Jenkins.
2. Внешний репозиторий для работы https://github.com/contentful/the-example-app.nodejs (публичный demo-nodejs проект, что первое нагуглилось :) )
3. Произведены следующие этапы:
  - Cloning Git;
  - Build;
  - Test;
  - Building image;
  - Deploy Image;
  - Remove Unused docker image.
4. Проверка работоспособности полученного контейнера в AWS (использовал Amazon ECS).
  4.1. Создал Cluster.
  4.2. Создал Task Definitions.
  4.2.1. В Container Definitions определил откуда и какой контейнер загружать (teatron/content:2 он публичный, поэтому дополнительной авторизации не требует, но можно использовать и свой репо).
  4.2.2. Важный момент! В разделе "Network&Security" -> "SecurityGroups" находим нашу "SecurityGroups" и через "Edit inbound rules" проверяем доступность наши портов. Поскольку в докер-файле указывался 3000 порт, то тут он так же должен быть прописан, иначе не взлетит приложение.
  4.3. Запускаем созданый Task, ждем пока он перейдет в состояние RUNNING и проверяем работоспособность приложения в нашем контейнере. (порт для доступа 3000).
Адрес доступа можно посмотреть войдя в запущеный таск. Там в разделе "Network" строка "Public IP" - это внешний адрес нашего развернутого контейнера (в браузере набираем http://наш_Public_IP:3000)
